
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. */

@layer base {
  :root {
    --background: 31 48 56; /* #1f3038 */
    --foreground: 255 255 255; /* #ffffff */

    --card: 36 58 69;
    --card-foreground: 255 255 255;

    --popover: 31 48 56;
    --popover-foreground: 255 255 255;

    --primary: 78 178 186; /* #4eb2ba */
    --primary-foreground: 31 48 56;

    --secondary: 65 125 118; /* #417d76 */
    --secondary-foreground: 255 255 255;

    --accent: 50 122 145; /* #327a91 */
    --accent-foreground: 255 255 255;

    --muted: 45 70 80;
    --muted-foreground: 200 220 230;

    --destructive: 239 68 68;
    --destructive-foreground: 255 255 255;

    --border: 50 122 145;
    --input: 45 70 80;
    --ring: 78 178 186;

    --radius: 0.75rem;

    --sidebar-background: 31 48 56;
    --sidebar-foreground: 255 255 255;
    --sidebar-primary: 78 178 186;
    --sidebar-primary-foreground: 31 48 56;
    --sidebar-accent: 50 122 145;
    --sidebar-accent-foreground: 255 255 255;
    --sidebar-border: 50 122 145;
    --sidebar-ring: 78 178 186;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    background-color: #1f3038 !important;
    color: #ffffff !important;
  }

  /* Force override any default button styles */
  button {
    background-color: hsl(var(--primary)) !important;
    color: hsl(var(--primary-foreground)) !important;
  }

  button:hover {
    background-color: hsl(var(--primary) / 0.9) !important;
  }

  /* Override any default link colors */
  a {
    color: hsl(var(--primary)) !important;
  }

  a:hover {
    color: hsl(var(--primary) / 0.8) !important;
  }

  /* Force input field colors */
  input, textarea, select {
    background-color: hsl(var(--input)) !important;
    color: #ffffff !important;
    border-color: hsl(var(--border)) !important;
  }

  /* Override any focus states */
  input:focus, textarea:focus, select:focus, button:focus {
    ring-color: hsl(var(--ring)) !important;
    border-color: hsl(var(--primary)) !important;
  }

  /* Force card colors */
  .card, [class*="card"] {
    background-color: hsl(var(--card)) !important;
    color: hsl(var(--card-foreground)) !important;
  }

  /* Override any default navigation colors */
  nav, .nav, [class*="nav"] {
    background-color: hsl(var(--background)) !important;
    color: hsl(var(--foreground)) !important;
  }

  /* Force override any default theme colors that might leak through */
  .bg-white, .bg-gray-50, .bg-gray-100, .bg-yellow-50, .bg-pink-50, .bg-blue-50 {
    background-color: hsl(var(--background)) !important;
  }

  .text-black, .text-gray-900, .text-gray-800 {
    color: #ffffff !important;
  }

  /* Override any default radix-ui or shadcn colors */
  [data-radix-collection-item], [data-state], [role="button"], [role="tab"] {
    background-color: inherit !important;
    color: inherit !important;
  }

  /* Force primary color for any accent elements */
  .bg-blue-500, .bg-blue-600, .bg-indigo-500, .bg-indigo-600 {
    background-color: hsl(var(--primary)) !important;
  }

  /* Force secondary color where needed */
  .bg-green-500, .bg-green-600, .bg-teal-500, .bg-teal-600 {
    background-color: hsl(var(--secondary)) !important;
  }

  /* Force tertiary/accent color */
  .bg-cyan-500, .bg-cyan-600, .bg-sky-500, .bg-sky-600 {
    background-color: hsl(var(--accent)) !important;
  }

  /* Remove any unwanted colored borders */
  .border-yellow-200, .border-pink-200, .border-blue-200, .border-gray-200 {
    border-color: hsl(var(--border)) !important;
  }
}

@layer utilities {
  .animate-pulse-medical {
    animation: pulse-medical 2s ease-in-out infinite;
  }
  
  .animate-radar-sweep {
    animation: radar-sweep 3s linear infinite;
  }
  
  .animate-scanning {
    animation: scanning 2s ease-in-out infinite;
  }
}

@keyframes pulse-medical {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.05);
  }
}

@keyframes radar-sweep {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes scanning {
  0%, 100% {
    transform: translateX(-100%);
    opacity: 0;
  }
  50% {
    transform: translateX(100%);
    opacity: 1;
  }
}
